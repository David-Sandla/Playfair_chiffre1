@page "/"
@rendermode InteractiveServer
@using PlayfairChiffre_Lib

<PageTitle>Playfair Chiffre</PageTitle>

<h1 class="text-2xl font-bold mb-4">Playfair Chiffre</h1>

<div class="grid gap-4">
    <input class="p-2 border rounded" @bind="key" placeholder="Schlüsselwort" />
    <textarea class="p-2 border rounded" @bind="inputText" rows="4" placeholder="Text zum Ver oder Entschlüsseln"></textarea>

    <div class="flex gap-2">
        <button class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded" @onclick="Encrypt">Verschlüsseln</button>
        <button class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded" @onclick="Decrypt">Entschlüsseln</button>
        <button class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded" @onclick="Reset">Zurücksetzen</button>
    </div>

    <div class="mt-4">
        <h2 class="font-semibold">Ergebnis:</h2>
        <p class="whitespace-pre-wrap">@outputText</p>
    </div>
</div>

@code {
    private string key = "";
    private string inputText = "";
    private string outputText = "";

    private void Encrypt()
    {
        outputText = $"[DEBUG] Encrypt clicked: {DateTime.Now}";
        try
        {
            var cipher = new PlayfairChriffre(key);
            outputText = cipher.Encrypt(inputText);
        }
        catch (Exception ex)
        {
            outputText = $"Fehler: {ex.Message}";
        }
    }

    private void Decrypt()
    {
        try
        {
            var cipher = new PlayfairChriffre(key);
            outputText = cipher.Decrypt(inputText);
        }
        catch (Exception ex)
        {
            outputText = $"Fehler: {ex.Message}";
        }
    }

    private void Reset()
    {
        key = string.Empty;
        inputText = string.Empty;
        outputText = string.Empty;
    }
    
    
    
}


